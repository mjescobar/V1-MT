/*
 * @author Pedro F. Toledo <pedrotoledocorrea@gmail.com>
 * @version 1.0
 * Generated by ConsolidatedDocumentation v1.0.xlsm
 * TimeStamp: 2015-07-14 04:31:08
 */

#include <vector>
#include <string>
#include <fstream>
using namespace std;
#include "enum.h"
#include "define.h"
#include "Tools.h"
#include "HashEntry.h"
#include "HashTable.h"
#include "Globals.h"
#include "main.h"

void SettingsManager::InitializeVariables()
{
  // Environment Variables
  Variables.SetSetting(HIDE_END, Data_bool, 1);
  Variables.SetSetting(MAX_NPROC_NESTING, Data_int, 1);
  Variables.SetSetting(SHOW_ELAPSED_TIME, Data_bool, 1);
  // V1 Variables
  for (int i = 0; i < V1_MAX_NEURONS; i++) {    Variables.SetSetting(string("SIM:") + V1_LABEL + string("'") + IIntToString(i), Data_double, 8);  }
  Variables.SetSetting(V1_FIRST_CALCULATION, Data_string, 1);
  Variables.SetSetting(V1_ACTIVATION_METHOD, Data_string, 1);
  Variables.SetSetting(V1_DACTIVATION_METHOD, Data_string, 1);
  Variables.SetSetting(V1_EXTERNAL_EXCITATION_METHOD, Data_string, 1);
  // V1 Activation Methods
  // V1_A001 Method Parameters
  Variables.SetSetting(V1_A001_NL_MAX, Data_double, 1);
  Variables.SetSetting(V1_A001_NL_A, Data_double, 1);
  Variables.SetSetting(V1_A001_NL_B, Data_double, 1);
  // V1 Derivate Activation Methods
  // V1_D001 Method Parameters
  Variables.SetSetting(V1_D001_CONDUCTANCE_LEAK, Data_double, 1);
  Variables.SetSetting(V1_D001_EXCITATORY_FACTOR, Data_double, 1);
  Variables.SetSetting(V1_D001_INHIBITION_FACTOR, Data_double, 1);
  Variables.SetSetting(V1_D001_WEIGHT_FACTOR, Data_double, 1);
  // V1 External Excitation Method
  // V1_F001 Method Parameters
  Variables.SetSetting(V1_F001_A, Data_double, 1);
  Variables.SetSetting(V1_F001_B, Data_double, 1);
  Variables.SetSetting(V1_F001_ORIENTATION, Data_double, 1);
  Variables.SetSetting(V1_F001_SPATIAL_FREQUENCY, Data_double, 1);
  Variables.SetSetting(V1_F001_TEMPORAL_FREQUENCY, Data_double, 1);
  Variables.SetSetting(V1_F001_MAGNITUDE, Data_double, 1);
  Variables.SetSetting(V1_F001_PHASE, Data_int, 1);
  // MT Variables
  for (int i = 0; i < MT_MAX_NEURONS; i++) {    Variables.SetSetting(string("SIM:") + MT_LABEL + string("'") + IIntToString(i), Data_double, 6);  }
  Variables.SetSetting(MT_FIRST_CALCULATION, Data_string, 1);
  Variables.SetSetting(MT_ACTIVATION_METHOD, Data_string, 1);
  Variables.SetSetting(MT_DACTIVATION_METHOD, Data_string, 1);
  // MT Activation Methods
  // MT_A001 Parameters
  // MT Derivate Activation Methods
  // MT_D001 Parameters
  // Linking Variables
  // V1V1 Linking Methods
  for (int i = 0; i < V1_MAX_NEURONS; i++) {    for (int j = 0; j < V1_MAX_NEURONS; j++) {      Variables.SetSetting(string("SIM:") + V1_LABEL + string("'") + IIntToString(i) + ":" + V1_LABEL + string("'") + IIntToString(j), Data_double, 1);    }  }
  Variables.SetSetting(V1V1_CONNECTION_METHOD, Data_string, 1);
  // V1V1_L001 Link Parameters
  Variables.SetSetting(V1V1_L001_BASE_WEIGHT_SOURCE, Data_string, 1);
  Variables.SetSetting(V1V1_L001_DEFAULT_WEIGHT, Data_double, 1);
  // V1MT Linking Methods
  Variables.SetSetting(V1MT_CONNECTION_METHOD, Data_string, 1);
  // V1MT_L001 Link Parameters
  Variables.SetSetting(V1MT_L001_APERTURE, Data_double, 1);
  Variables.SetSetting(V1MT_L001_AMPLIFICATION, Data_double, 1);
  Variables.SetSetting(V1MT_L001_SIGMA, Data_double, 1);
  Variables.SetSetting(V1MT_L001_MODULATION, Data_double, 1);
  // Simulator Variables
  Variables.SetSetting(SIMULATOR_TIME_STEP, Data_double, 1);
}
