/*
 * @author Pedro F. Toledo <pedrotoledocorrea@gmail.com>
 * @version 1.0
 * Generated by ConsolidatedDocumentation v1.0.xlsm
 * TimeStamp: 2015-03-16 12:32:09
 */

#include <vector>
#include <string>
#include <fstream>
//#include <string.h>
using namespace std;
#include "enum.h"
#include "define.h"
#include "Tools.h"
#include "HashEntry.h"
#include "HashTable.h"
//#include "LogManager.h"
//#include "SettingsManager.h"
//#include "InterpreterManager.h"
#include "Globals.h"
#include "main.h"

void SettingsManager::InitializeEnvironment()
{
  // Math
  // HashTable
  // Default Log Verbose Behavior
  // Environment Variables
  Environment.SetSetting(HIDE_END, Data_bool, 1);
}

void SettingsManager::InitializeSimulation()
{
  // V1 Neuron Parameters
  for (int i = 0; i < MAX_V1_NEURONS; i++) {
    Simulation.SetSetting(V1_LABEL + NNumber(i), Data_double, 8);
  }
  Simulation.SetSetting(V1_ACTIVATION_METHOD, Data_string, 1);
  Simulation.SetSetting(V1_DACTIVATION_METHOD, Data_string, 1);
  Simulation.SetSetting(V1_EXTERNAL_EXCITATION_METHOD, Data_string, 1);
  // V1_D001 Method
  Simulation.SetSetting(V1_D001_CONDUCTANCE_LEAK, Data_double, 1);
  Simulation.SetSetting(V1_D001_EXCITATORY_FACTOR, Data_double, 1);
  Simulation.SetSetting(V1_D001_INHIBITION_FACTOR, Data_double, 1);
  // V1_F001 Method
  Simulation.SetSetting(V1_F001_A, Data_double, 1);
  Simulation.SetSetting(V1_F001_B, Data_double, 1);
  Simulation.SetSetting(V1_F001_ORIENTATION, Data_double, 1);
  Simulation.SetSetting(V1_F001_SPATIAL_FREQUENCY, Data_double, 1);
  Simulation.SetSetting(V1_F001_TEMPORAL_FREQUENCY, Data_double, 1);
  Simulation.SetSetting(V1_F001_MAGNITUDE, Data_double, 1);
  Simulation.SetSetting(V1_F001_PHASE, Data_int, 1);
  // MT Neuron Parameters
  for (int i = 0; i < MAX_MT_NEURONS; i++) {
    Simulation.SetSetting(MT_LABEL + NNumber(i), Data_double, 6);
  }
  Simulation.SetSetting(MT_ACTIVATION_METHOD, Data_string, 1);
  Simulation.SetSetting(MT_DACTIVATION_METHOD, Data_string, 1);
  // MT_A001 Method
  // V1V1 Link Parameters
  Simulation.SetSetting(V1V1_WEIGHT_ADAPTATION, Data_string, 1);
  Simulation.SetSetting(V1V1_BASE_WEIGHT_SOURCE, Data_string, 1);
  Simulation.SetSetting(V1V1_DEFAULT_WEIGHT, Data_double, 1);
  for (int i = 0; i < MAX_V1_NEURONS; i++) {
    for (int j = 0; j < MAX_V1_NEURONS; j++) {
      Simulation.SetSetting(V1_LABEL + NNumber(i) + V1_LABEL + NNumber(j), Data_double, 1);
    }
  }
  // MTMT Link Parameters
  // V1MT Link Parameters
  Simulation.SetSetting(V1MT_CONNECTION_METHOD, Data_string, 1);
  // V1MT_L001 Method
  Simulation.SetSetting(V1MT_L001_APERTURE, Data_double, 1);
  Simulation.SetSetting(V1MT_L001_AMPLIFICATION, Data_double, 1);
  Simulation.SetSetting(V1MT_L001_SIGMA, Data_double, 1);
  Simulation.SetSetting(V1MT_L001_MODULATION, Data_double, 1);
  // Simulator Defines
  Simulation.SetSetting(SIMULATOR_TIME_STEP, Data_double, 1);
  // Interface Defines
  // Run Simulation Calls
  // Reporting Calls
  // IO Interaction Calls
}
